import os
import serial
import pyfirmata
import time
import smtplib, ssl
import PySimpleGUI as sg
from multiprocessing import Process
from gpiozero import Buzzer
import multiprocessing as mp
import pygame


board = pyfirmata.Arduino('/dev/ttyUSB1')

it = pyfirmata.util.Iterator(board)
it.start()

board.digital[2].mode = pyfirmata.INPUT
board.digital[3].mode = pyfirmata.INPUT
board.digital[4].mode = pyfirmata.INPUT

board1 = pyfirmata.Arduino('/dev/ttyUSB3')

it1 = pyfirmata.util.Iterator(board1)
it1.start()

board1.digital[2].mode = pyfirmata.INPUT
board1.digital[3].mode = pyfirmata.INPUT
board1.digital[4].mode = pyfirmata.INPUT
board1.digital[5].mode = pyfirmata.INPUT

state = 1;

armed = mp.Value('i', 0)
mm = mp.Value('i', 0)

pygame.mixer.init()
pygame.mixer.music.load("alarm.wav")

layout = [
    [sg.Text("Introduceti parola- Stare actuala: dezactivat")],
    [sg.Input(do_not_clear=False)],
    [sg.Button("OK", key='enter')]
]

# Create the window
window = sg.Window("Demo", layout, return_keyboard_events=True)


def encript(str):
    str1 = chr(ord(str[0]) - 2)
    str2 = chr(ord(str[1]) - 4)
    str3 = chr(ord(str[2]) + 7)
    str4 = chr(ord(str[3]) + 7)
    return str1 + str2 + str3 + str4


# Create an event loop
def gui(armed):
    global window
    global layout
    global mm
    while True:

        event, values = window.read()
        # End program if user closes window or
        # presses the OK button
        print(values, event)
        if event == 'Return:36' or event == 'ok':
            print("enter3")
            if encript(values[0]) == '/.:;':
                if (armed.value % 2 == 1):

                    armed.value += 1
                    layout = [
                        [sg.Text("Introduceti parola- Stare actuala: dezactivat")],
                        [sg.Input(do_not_clear=False)],
                        [sg.Button("OK")]
                    ]

                    window.close()
                    window = sg.Window("Demo", layout, return_keyboard_events=True)

                    mm.value = 0
                else:
                    layout = [
                        [sg.Text("Introduceti parola- Stare actuala: activat")],
                        [sg.Input(do_not_clear=False)],
                        [sg.Button("OK")]
                    ]
                    window.close()
                    window = sg.Window("Demo", layout, return_keyboard_events=True)

                    time.sleep(3)
                    armed.value += 1
        if event == sg.WIN_CLOSED:
            window.close()
            break


def alarma(name):
    port = 465  # For SSL
    smtp_server = "smtp.gmail.com"
    sender_email = ""  # Enter your address
    receiver_email = name  # Enter receiver address
    password = ""
    message = """\
    Subject: Alerta de securitate

    Alarma a fost declansata."""

    context = ssl.create_default_context()
    with smtplib.SMTP_SSL(smtp_server, port, context=context) as server:
        server.login(sender_email, password)
        server.sendmail(sender_email, receiver_email, message)

def printMo(sw, senzor):
    global state
    if(sw == False):
        if(state == 0):
            state =1
            print("Motion ended!")
            return 0
    if (sw == True):
        if (state == 1):

            state = 0
            print("Motion detected: ",senzor," !")
            duration = 1  # seconds
            freq = 440  # Hz
            os.system('play -nq -t alsa synth {} sine {}'.format(duration, freq))
            alarma("")
            pygame.mixer.music.play(3)
            return 1
    return 0


if _name_ == "_main_":
    print("da")
    p1 = Process(target=gui, args=(armed,))
    p1.start()
    ok=0;
    while True:
        print(ok)
        if (armed.value % 2 == 1):
            if(ok==0):
                sw1 = board.digital[2].read()
                ok=printMo(sw1, "1")
                print(sw1)

            if (ok == 0):
                sw2 = board.digital[3].read()
                ok=printMo(sw2, "2")
                print(sw2)

            if (ok == 0):
                sw3 = board.digital[4].read()
                ok=printMo(sw3, "3")
                print(sw3)

            if (ok == 0):
                sw11 = board1.digital[2].read()
                ok=printMo(sw11, "4")
                print(sw11)

            if (ok == 0):
                sw12 = board1.digital[3].read()
                ok=printMo(sw12, "5")
                print(sw12)

            if (ok == 0):
                sw13 = board1.digital[4].read()
                ok=printMo(sw13, "6")
                print(sw13)

            if (ok == 0):
                sw14 = board1.digital[5].read()
                ok=printMo(sw14, "7")
                print(sw14)


            time.sleep(0.1)

        if(armed.value % 2 == 0):
            ok=0;


    p1.join()
